---
layout: post
title: '系统分析与设计HW1'
subtitle: '15331404 张益强'
date: 2018-03-15
categories: 系统分析与设计
cover: 'http://on2171g4d.bkt.clouddn.com/jekyll-theme-h2o-postcover.jpg'
tags: 系统分析与设计 Homework
---

# 系统分析与设计 HW1

---

## 1.简单题

### 1.1 软件工程的定义
> 软件工程"将系统化的、规范的、可度量的方法用于软件的开发、运行和维护的过程，即将工程化应用于软件开发中"

### 1.2 阅读人月神话等资料，解释 software crisis、COCOMO 模型
- 随着计算机应用需求的驱动，系统 软件和应用软件有很大的发展，如操作系统，编译系 统和大型应用软件等。由于软件生产的复杂性和高成 本，使大型软件的生产出现了很大的困难，即出现软 件危机。虽然时至今日人们并没有完全克服软件危机，但软件 工程却很大的改善了软件业的情况，让人们看到了希望， 也说明我们还要继续努力，更深入地认识软件开发管理 的规律、深化软件工程的研究和实践。


- 构造性成本模型（COCOMO，英文全称为Constructive Cost Model）是由巴里·勃姆（Barry Boehm）提出的一种软件成本估算方法。这种模型使用一种基本的回归分析公式，使用从项目历史和现状中的某些特征作为参数来进行计算。它在开发前通过合理预测（代码量，人均工作量，开发需求人数等）来合理分配工作，从而实现了多人的通力合作的目的，避免了工程进行到一半时发现人手不足而增加人手，培养新员工的问题，大大提升了软件开发效率。

### 1.3 软件生命周期。
软件生命周期（Software Development LifeCycle）是指软件的产生直到成熟的全部过程。具体可分为4个时期7个阶段：

1. 软件分析时期： 问题定义，可行性研究，需求分析
2. 软件设计时期： 总体设计，详细设计
3. 编码与测试时期： 编码，测试
4. 运行与维护时期：

### 1.4 按照 SWEBok 的 KA 划分，本课程关注哪些 KA 或 知识领域？
ACM与IEEE Computer Society联合修定的SWEBOK[14]（Software Engineering Body of Knowledge）提到，软件工程领域中的核心知识包括：
- 软件需求（Software requirements）
- 软件设计（Software design）
- 软件建构（Software construction）
- 软件测试（Software test）
- 软件维护与更新（Software maintenance）
- 软件构型管理（Software Configuration Management, SCM）
- 软件工程管理（Software Engineering Management）
- 软件开发过程（Software Development Process）
- 软件工程工具与方法（Software Engineering Tools and methods）
- 软件质量（Software Quality）

### 1.5 解释 CMMI 的五个级别。例如：Level 1 - Initial：无序，自发生产模式。
- level 1 -Initial：无序，自发生产模式。
- level 2 -Managed：对项目定制，reactive（被动响应）
- level 3 - Defined：对组织定制，proactive（积极主动）
- level 4 - Quantitatively Managed：过程量化和控制
- level 5 - Optimizing：专注于过程提升

### 1.6 用自己语言简述 SWEBok 或 CMMI （约200字）

> 能力成熟度模型集成（英文：Capability Maturity Model Integration，简称CMMI或“希迈”）是一个过程改进方法，它的目的是帮助组织改进他们的绩效。

CMMI 不局限于软件开发的生命周期，而是一个更为广泛的范畴-工程设计的生命周期

CMMI并不是一个过程，也不是告诉你怎么去做一件事情。如果用一句话来概括什么是CMMI，它就是各个进程的一个关键的元素，在很多领域里面一个集成的点。它是这样的一个基本架构，能够用来度量你的有效性和实用性；能够找出这样的一些机会，继续改进的机会，包括在商业目标、策略还有降低项目的风险等方面。
CMMI的实施能够提高我国企业的管理水平。降低企业的工程成本。

--------

## 2. 解释PSP各项指标及技能要求： 

### 阅读《现代软件工程》的 PSP: Personal Software Process 章节。
按表格 PSP 2.1， 了解一个软件工程师在接到一个任务之后要做什么，需要哪些技能，解释你打算如何统计每项数据？ （期末考核，每人按开发阶段提交这个表）.

####接到一个任务后
- 计划

	- 估计这个任务需要多少时间

-开发

	- 分析需求

	- 生成设计文档

	- 设计复审 (和同事审核设计文档)

	- 代码规范 (为目前的开发制定合适的规范)

	- 具体设计

	- 具体编码

	- 代码复审

	- 测试（包括自我测试，修改代码，提交修改）

- 记录时间花费

- 测试报告

- 计算工作量

- 事后总结

- 提出过程改进计划



####所需技能
过硬的编码能力，其阅读和撰写文档的技能、自我评估的技能以及测试技能

#### 如何统计数据
- 对于每一项指标，采用计时的方式产生统计数据，记录并保存，项目完成后依照自己的统计数据进行处理，产生完整的、多元的PSP指标分析结果。